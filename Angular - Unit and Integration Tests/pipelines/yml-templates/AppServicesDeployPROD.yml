stages:
  - stage: DeployToAppServicesPROD
    displayName: "[PROD] - Deploy to App Services"
    dependsOn: [DeployToAppServicesQA]
    jobs:
      - deployment: BackEnd
        displayName: "Back-End"
        environment: "Production"
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  displayName: "Download Back-End Artifacts"
                  inputs:
                    buildType: "current"
                    artifactName: "backend-drop"
                    targetPath: "$(Pipeline.Workspace)/backend-drop"

                - task: AzureCLI@2
                  displayName: "Verify and Create the Azure App Service Resource for Back-End (PROD)"
                  inputs:
                    azureSubscription: "$(azureSubs)"
                    scriptType: "bash"
                    scriptLocation: "inlineScript"
                    inlineScript: |
                      set -e

                      RESOURCE_GROUP="$(resourceGroupName)"
                      WEBAPP_NAME="$(webAppBackNamePROD)"
                      APP_SERVICE_PLAN="$(appServicePlanWindows)"
                      RUNTIME="DOTNET|6.0"

                      app_exists=$(az webapp list \
                        --resource-group "$RESOURCE_GROUP" \
                        --query "[?name=='$WEBAPP_NAME'].name" \
                        --output tsv)

                      if [ -z "$app_exists" ]; then
                        az webapp create \
                          --resource-group "$RESOURCE_GROUP" \
                          --plan "$APP_SERVICE_PLAN" \
                          --name "$WEBAPP_NAME" \
                          --runtime "$RUNTIME"
                      fi

                      az webapp config appsettings set \
                        --name "$WEBAPP_NAME" \
                        --resource-group "$RESOURCE_GROUP" \
                        --settings ConnectionStrings__DefaultConnection="$(cnn-string-prod)" \
                                  ASPNETCORE_ENVIRONMENT="PROD"

                - task: AzureWebApp@1
                  displayName: "Deploy Back-End Artifacts"
                  inputs:
                    azureSubscription: "$(azureSubs)"
                    appType: "webApp"
                    appName: "$(webAppBackNamePROD)"
                    package: "$(Pipeline.Workspace)/backend-drop/api"
                    deploymentMethod: "auto"

      - deployment: FrontEnd
        displayName: "Front-End"
        environment: "Production"
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  displayName: "Download Front-End Artifacts"
                  inputs:
                    buildType: "current"
                    artifactName: "frontend-drop"
                    targetPath: "$(Pipeline.Workspace)/frontend-drop"

                - task: PowerShell@2
                  displayName: "Create and Copy env.js to App Service"
                  inputs:
                    targetType: "inline"
                    script: |
                      $envJsContent = "window['env'] = { apiUrl: '$(APPSERVICES_API_URL_PROD)' };"
                      $envJsPath = "$(Pipeline.Workspace)/frontend-drop/assets/env.js"
                      New-Item -ItemType File -Path $envJsPath -Force
                      Set-Content -Path $envJsPath -Value $envJsContent

                - task: AzureCLI@2
                  displayName: "Verify and Create the Azure App Service Resource for Front-End (PROD)"
                  inputs:
                    azureSubscription: "$(azureSubs)"
                    scriptType: "bash"
                    scriptLocation: "inlineScript"
                    inlineScript: |
                      set -e

                      RESOURCE_GROUP="$(resourceGroupName)"
                      WEBAPP_NAME="$(webAppFrontNamePROD)"
                      APP_SERVICE_PLAN="$(appServicePlanWindows)"
                      RUNTIME="NODE|18LTS"

                      app_exists=$(az webapp list \
                        --resource-group "$RESOURCE_GROUP" \
                        --query "[?name=='$WEBAPP_NAME'].name" \
                        --output tsv)

                      if [ -z "$app_exists" ]; then
                        az webapp create \
                          --resource-group "$RESOURCE_GROUP" \
                          --plan "$APP_SERVICE_PLAN" \
                          --name "$WEBAPP_NAME" \
                          --runtime "$RUNTIME"
                      fi

                      az webapp config appsettings set \
                        --name "$WEBAPP_NAME" \
                        --resource-group "$RESOURCE_GROUP" \
                        --settings API_URL="$(APPSERVICES_API_URL_PROD)"

                - task: AzureWebApp@1
                  displayName: "Deploy Front-End Artifacts"
                  inputs:
                    azureSubscription: "$(azureSubs)"
                    appType: "webApp"
                    appName: "$(webAppFrontNamePROD)"
                    package: "$(Pipeline.Workspace)/frontend-drop"
                    deploymentMethod: "auto"
